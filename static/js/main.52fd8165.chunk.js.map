{"version":3,"sources":["reducers/initialState.js","constants/configuration.js","enums/Actions.js","enums/gameState.js","enums/row.js","hooks/frameRunner.js","hooks/controller.js","styles/colors.js","components/Dot.js","components/Board.js","components/Overview.js","utils/index.js","components/Stacks.js","App.js","index.js"],"names":["config","Columns","Rows","MillisecondsPerIteration","StartingLength","Actions","GameState","Playing","Won","Lost","Row","left","length","this","right","clampedLeft","Math","min","max","index","row","initialRows","i","push","initialState","rows","activeRow","gameStatus","FrameRunner","onFrame","frame","now","Date","totalDuration","startTime","frameLength","lastFrameTime","frameCount","isStarted","isRunning","scheduleNextFrame","cancelFrame","undefined","frameId","window","cancelAnimationFrame","requestAnimationFrame","reset","Error","pauseTime","pauseLength","replaceRow","slice","reducer","state","action","type","setLeft","start","updatedActiveRow","newActiveRowIndex","currentActiveRow","intersection","getIntersection","setLeftRight","updatedRows","nextActiveRow","setLength","useGameModel","frameRunnerRef","React","useRef","useReducer","dispatch","handleFrame","ms","uniquePosition","totalPositions","msPerPosition","currentPosition","floor","newStart","useEffect","current","replaceOnFrame","stop","useCallback","e","preventDefault","stopPropagation","colors","pink","Dot","color","isOn","size","backgroundColor","Color","lighten","alpha","desaturate","style","width","height","borderRadius","boxShadow","Spacer","Board","dotSize","spacing","dotRows","dotColumn","j","Fragment","key","display","flexDirection","Overview","fontWeight","marginBottom","fontSize","fontFamily","getTitle","Stacks","addEventListener","removeEventListener","alignItems","App","ReactDOM","render","document","getElementById"],"mappings":"iLAKA,I,kECEeA,EAPA,CACbC,QAAS,GACTC,KAAM,GACNC,yBAA0B,IAC1BC,eAAgB,GCJLC,EACK,mBADLA,EAEA,cAFAA,EAGF,UCGIC,EANG,CAChBC,QAAS,EACTC,IAAK,EACLC,KAAM,G,cCDaC,E,WAInB,WAAYC,EAAMC,GAAS,oBACzBC,KAAKF,KAAOA,EACZE,KAAKD,OAASA,EACdC,KAAKC,MAAQH,EAAOC,EAAS,E,oDAEvBD,GACN,IAAMI,EAAcC,KAAKC,IACvBD,KAAKE,IAAIP,EAAM,GACfX,EAAOC,QAAUY,KAAKD,QAExB,OAAIG,IAAgBF,KAAKF,KAChBE,KAEF,IAAIH,EAAIK,EAAaF,KAAKD,U,gCAGzBA,GACR,OAAO,IAAIF,EAAIG,KAAKF,KAAMC,K,2BAGvBO,GACH,OAAON,KAAKF,MAAQQ,GAASA,GAASN,KAAKC,Q,sCAG7BM,GACd,MAAO,CACLT,KAAMK,KAAKE,IAAIE,EAAIT,KAAME,KAAKF,MAC9BG,MAAOE,KAAKC,IAAIG,EAAIN,MAAOD,KAAKC,U,mCAIvBH,EAAMG,GACjB,OAAIA,EAAQH,EACH,IAAID,EAAIG,KAAKF,MAAO,GAEtB,IAAID,EAAIC,EAAMG,EAAQH,EAAO,O,KJrClCU,EAAc,GACXC,EAAI,EAAGA,EAAItB,EAAOE,KAAMoB,IAC3BA,IAAMtB,EAAOE,KAAO,EACtBmB,EAAYE,KAAK,IAAIb,EAAI,EAAGV,EAAOI,eAAiB,IAEpDiB,EAAYE,KAAK,IAAIb,EAAI,GAAI,IAGjC,IAMec,EANM,CACnBC,KAAMJ,EACNK,UAAW1B,EAAOE,KAAO,EACzByB,WAAYrB,EAAUC,SKfHqB,E,WAanB,WAAYC,GAAU,IAAD,gCA0DrBC,MAAQ,WACN,IAAMC,EAAMC,KAAKD,MACXE,EAAgBF,EAAM,EAAKG,UAC3BC,EAAcJ,EAAM,EAAKK,cAE/B,EAAKP,QAAQ,EAAKQ,WAAYF,EAAaF,GAGvC,EAAKK,WAAa,EAAKC,YACzB,EAAKF,aACL,EAAKD,cAAgBL,EACrB,EAAKS,sBArEY,KAyErBC,YAAc,gBACSC,IAAjB,EAAKC,UACPC,OAAOC,qBAAqB,EAAKF,SACjC,EAAKA,aAAUD,IA5EE,KAgFrBF,kBAAoB,WAClB,EAAKG,QAAUC,OAAOE,sBAAsB,EAAKhB,QAjF9B,KAoFrBiB,MAAQ,WACN,EAAKb,UAAYF,KAAKD,MACtB,EAAKK,cAAgB,EAAKF,UAC1B,EAAKG,WAAa,EAClB,EAAKC,WAAY,EACjB,EAAKC,WAAY,GAxFjB1B,KAAKgB,QAAUA,EACfhB,KAAKkC,Q,2DAGQlB,GACbhB,KAAKgB,QAAUA,I,8BAIf,GAAIhB,KAAKyB,UACP,MAAM,IAAIU,MAAM,qDAElBnC,KAAK4B,cACL5B,KAAKkC,QACLlC,KAAKyB,WAAY,EACjBzB,KAAK0B,WAAY,EACjB1B,KAAK2B,sB,6BAIL,IAAK3B,KAAKyB,UACR,MAAM,IAAIU,MAAM,gDAElBnC,KAAK4B,cACL5B,KAAKwB,WAAa,EAClBxB,KAAKoC,eAAYP,EACjB7B,KAAKyB,WAAY,EACjBzB,KAAK0B,WAAY,I,8BAIjB,IAAK1B,KAAK0B,UACR,MAAM,IAAIS,MAAM,uCAElB,IAAKnC,KAAKyB,UACR,MAAM,IAAIU,MAAM,8CAElBnC,KAAKoC,UAAYjB,KAAKD,MACtBlB,KAAK4B,cACL5B,KAAK0B,WAAY,I,+BAIjB,GAAI1B,KAAK0B,UACP,MAAM,IAAIS,MAAM,oCAElB,QAAuBN,IAAnB7B,KAAKoC,UACP,MAAM,IAAID,MAAM,0DAElB,IAAME,EAAclB,KAAKD,MAAQlB,KAAKoC,UACtCpC,KAAKqB,UAAYrB,KAAKqB,UAAYgB,EAClCrC,KAAKuB,cAAgBvB,KAAKuB,cAAgBc,EAC1CrC,KAAKoC,eAAYP,EACjB7B,KAAK0B,WAAY,EACjB1B,KAAK2B,wB,KC7DHW,EAAa,SAAC1B,EAAMH,EAAGF,GAC3B,MAAM,GAAN,mBAAWK,EAAK2B,MAAM,EAAG9B,IAAzB,CAA6BF,GAA7B,YAAqCK,EAAK2B,MAAM9B,EAAI,EAAGG,EAAKb,WAGxDyC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,KAAKnD,EACH,IAAMqB,EAAY4B,EAAM7B,KAAK6B,EAAM5B,WACnC,OAAI4B,EAAM3B,aAAerB,EAAUC,QAC1B+C,EAETA,EAAK,2BACAA,GADA,IAEH7B,KAAM0B,EACJG,EAAM7B,KACN6B,EAAM5B,UACNA,EAAU+B,QAAQF,EAAOG,UAK/B,KAAKrD,EACH,IAGIsD,EAHEC,EAAoBN,EAAM5B,UAAY,EACtCmC,EAAmBP,EAAM7B,KAAK6B,EAAM5B,WAG1C,GAFmB4B,EAAM5B,YAAc4B,EAAM7B,KAAKb,OAAS,EAGzD+C,EAAmBE,MACd,CACL,IACMC,EADcR,EAAM7B,KAAK6B,EAAM5B,UAAY,GAChBqC,gBAAgBF,GACjDF,EAAmBE,EAAiBG,aAClCF,EAAanD,KACbmD,EAAahD,OAGjB,IAAMmD,EAAcd,EAClBG,EAAM7B,KACN6B,EAAM5B,UACNiC,GAEF,GAAIA,EAAiB/C,OAAS,EAC5B,OAAO,2BACF0C,GADL,IAEE3B,WAAYrB,EAAUG,OAG1B,GAAImD,EAAoB,EACtB,OAAO,2BACFN,GADL,IAEE7B,KAAMwC,EACNtC,WAAYrB,EAAUE,MAG1B,IAAM0D,EAAgBZ,EAAM7B,KAAKmC,GACjC,OAAO,2BACFN,GADL,IAEE5B,UAAWkC,EACXnC,KAAM0B,EACJc,EACAL,EACAM,EACGC,UAAUR,EAAiB/C,QAC3B6C,QAAQE,EAAiBhD,SAIlC,KAAKN,EACH,OAAOmB,EAET,QACE,OAAO8B,IAuDEc,EAlDM,WACnB,IAAMC,EAAiBC,IAAMC,OAAO,IAAI3C,GADf,EAEC0C,IAAME,WAAWnB,EAAS7B,GAF3B,mBAElB8B,EAFkB,KAEXmB,EAFW,KAInBC,EAAc,SAACrC,EAAYF,EAAaF,GAC5C,IAAMP,EAAY4B,EAAM7B,KAAK6B,EAAM5B,WAC7BiD,EAAK1C,EAAgBjC,EAAOG,yBAC5ByE,EAAiB5E,EAAOC,QAAUyB,EAAUd,OAC5CiE,EAAkC,EAAjBD,EACjBE,EAAgB9E,EAAOG,yBAA2B0E,EAClDE,EAAkB/D,KAAKgE,MAAML,EAAKG,GAClCG,EACJF,EAAkBH,EACdC,EAAiBE,EACjBA,EACFE,IAAavD,EAAUgC,OACzBe,EAAS,CAAEjB,KAAMnD,EAAwBqD,MAAOuB,KAGpDC,qBAAU,WACRb,EAAec,QAAQC,eAAeV,KACrC,CAACA,IACJQ,qBAAU,WACRb,EAAec,QAAQzB,UACtB,IACHwB,qBAAU,YACJ5B,EAAM3B,aAAerB,EAAUG,MAExB6C,EAAM3B,aAAerB,EAAUE,MADxC6D,EAAec,QAAQE,SAIxB,CAAC/B,EAAM3B,aAEV,IAAM4B,EAASe,IAAMgB,aACnB,SAACC,GACCA,EAAEC,iBACFD,EAAEE,kBACEnC,EAAM3B,aAAerB,EAAUG,MACjCgE,EAAS,CAAEjB,KAAMnD,IACjBgE,EAAec,QAAQzB,SACdJ,EAAM3B,aAAerB,EAAUC,SACxCkE,EAAS,CAAEjB,KAAMnD,MAGrB,CAACiD,EAAM3B,aAGT,MAAO,CAAC2B,EAAOC,IC9HFmC,EAJA,CACbC,KAAM,W,gBCqBOC,EAnBH,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACpBC,EAAkBF,EACpBG,IAAMJ,GAAOK,QAAQ,IACrBD,IAAMJ,GAAOM,MAAM,IAAKC,WAAW,IACvC,OACE,yBACEC,MAAO,CACLC,MAAOP,EACPQ,OAAQR,EACRS,aAAc,MACdR,gBAAiBA,EACjBS,UAAWX,EAAI,cACJC,EAAO,EADH,cACUF,EADV,iBACwBE,EADxB,cACkCF,QAC7CnD,MCZNgE,EAAS,SAAC,GAAD,IAAGX,EAAH,EAAGA,KAAH,OAAc,yBAAKM,MAAO,CAAEC,MAAOP,EAAMQ,OAAQR,MA4BjDY,EA1BD,SAAC,GAGb,IAH2C,IAA5Bd,EAA2B,EAA3BA,MAAOe,EAAoB,EAApBA,QAASnF,EAAW,EAAXA,KACzBoF,EAAUD,EAAU,EACpBE,EAAU,GACPxF,EAAI,EAAGA,EAAItB,EAAOE,KAAMoB,IAAK,CAGpC,IAFA,IAAMyF,EAAY,GACZ3F,EAAMK,EAAKH,GACR0F,EAAI,EAAGA,EAAIhH,EAAOC,QAAS+G,IAClCD,EAAUxF,KACR,kBAAC,IAAM0F,SAAP,CAAgBC,IAAG,eAAU5F,EAAV,YAAe0F,IAChC,kBAAC,EAAD,CAAKnB,MAAOA,EAAOE,KAAMa,EAASd,KAAM1E,EAAI0E,KAAKkB,KACjD,kBAAC,EAAD,CAAQjB,KAAMc,MAIpBC,EAAQvF,KACN,kBAAC,IAAM0F,SAAP,CAAgBC,IAAG,cAAS5F,IAC1B,yBAAK+E,MAAO,CAAEc,QAAS,SAAWJ,GAClC,kBAAC,EAAD,CAAQhB,KAAMc,MAIpB,OACE,yBAAKR,MAAO,CAAEc,QAAS,OAAQC,cAAe,WAAaN,ICzBlDO,EAAW,SAAC,GAAD,IAAG1F,EAAH,EAAGA,WAAH,OACtB,wBACE0E,MAAO,CACLiB,WAAY,IACZC,aAAc,OACd1B,MAAO,QACP2B,SAAU,GACVC,WAAY,YCRM,SAAC9F,GACvB,OAAQA,GACN,KAAKrB,EAAUE,IACb,MAAO,oBACT,KAAKF,EAAUG,KACb,MAAO,gCACT,KAAKH,EAAUC,QACf,QACE,MAAO,uBDGRmH,CAAS/F,KEPDgG,EAAS,WAAO,IAAD,EACFvD,IADE,mBACnBd,EADmB,KACZC,EADY,KAY1B,OATA2B,qBAAU,WAGR,OAFAtC,OAAOgF,iBAAiB,UAAWrE,GACnCX,OAAOgF,iBAAiB,YAAarE,GAC9B,WACLX,OAAOiF,oBAAoB,UAAWtE,GACtCX,OAAOiF,oBAAoB,YAAatE,MAEzC,CAACA,IAGF,yBACE8C,MAAO,CAAEc,QAAS,OAAQC,cAAe,SAAUU,WAAY,WAE/D,kBAAC,EAAD,CAAUnG,WAAY2B,EAAM3B,aAC5B,kBAAC,EAAD,CAAOkE,MAAOH,EAAOC,KAAMiB,QAAS,GAAInF,KAAM6B,EAAM7B,SCjB3CsG,EAFH,kBAAM,kBAAC,EAAD,OCAlBC,IAASC,OACP,kBAAC,aAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.52fd8165.chunk.js","sourcesContent":["import config from \"../constants/configuration\";\nimport GameState from \"../enums/gameState\";\nimport Row from \"../enums/row\";\n\nconst initialRows = [];\nfor (let i = 0; i < config.Rows; i++) {\n  if (i === config.Rows - 1) {\n    initialRows.push(new Row(0, config.StartingLength - 1));\n  } else {\n    initialRows.push(new Row(0, -1));\n  }\n}\nconst initialState = {\n  rows: initialRows,\n  activeRow: config.Rows - 1,\n  gameStatus: GameState.Playing,\n};\n\nexport default initialState;\n","const config = {\n  Columns: 15,\n  Rows: 20,\n  MillisecondsPerIteration: 1000,\n  StartingLength: 6,\n};\n\nexport default config;\n","export const Actions = {\n  SetRowPosition: \"set_row_position\",\n  AddNewRow: \"add_new_row\",\n  Restart: \"restart\",\n};\n","const GameState = {\n  Playing: 0,\n  Won: 1,\n  Lost: 2,\n};\n\nexport default GameState;\n","import config from \"../constants/configuration\";\n\nexport default class Row {\n  // public readonly left: number;\n  // public readonly length: number;\n  // public readonly right: number;\n  constructor(left, length) {\n    this.left = left;\n    this.length = length;\n    this.right = left + length - 1;\n  }\n  setLeft(left) {\n    const clampedLeft = Math.min(\n      Math.max(left, 0),\n      config.Columns - this.length\n    );\n    if (clampedLeft === this.left) {\n      return this;\n    }\n    return new Row(clampedLeft, this.length);\n  }\n\n  setLength(length) {\n    return new Row(this.left, length);\n  }\n\n  isOn(index) {\n    return this.left <= index && index <= this.right;\n  }\n\n  getIntersection(row) {\n    return {\n      left: Math.max(row.left, this.left),\n      right: Math.min(row.right, this.right),\n    };\n  }\n\n  setLeftRight(left, right) {\n    if (right < left) {\n      return new Row(this.left, -1);\n    }\n    return new Row(left, right - left + 1);\n  }\n}\n","export default class FrameRunner {\n  // var onFrame;\n\n  // const isStarted;\n  // const isRunning;\n\n  // const startTime;\n  // const lastFrameTime;\n  // const frameCount;\n  // const frameId;\n\n  // const pauseTime;\n\n  constructor(onFrame) {\n    this.onFrame = onFrame;\n    this.reset();\n  }\n\n  replaceOnFrame(onFrame) {\n    this.onFrame = onFrame;\n  }\n\n  start() {\n    if (this.isStarted) {\n      throw new Error(\"cannot start the timer when it is already started\");\n    }\n    this.cancelFrame();\n    this.reset();\n    this.isStarted = true;\n    this.isRunning = true;\n    this.scheduleNextFrame();\n  }\n\n  stop() {\n    if (!this.isStarted) {\n      throw new Error(\"cannot stop the timer when it is not started\");\n    }\n    this.cancelFrame();\n    this.frameCount = 0;\n    this.pauseTime = undefined;\n    this.isStarted = false;\n    this.isRunning = false;\n  }\n\n  pause() {\n    if (!this.isRunning) {\n      throw new Error(\"cannot pause when it is not running\");\n    }\n    if (!this.isStarted) {\n      throw new Error(\"cannot pause when the timer is not started\");\n    }\n    this.pauseTime = Date.now();\n    this.cancelFrame();\n    this.isRunning = false;\n  }\n\n  resume() {\n    if (this.isRunning) {\n      throw new Error(\"cannot resume when it is running\");\n    }\n    if (this.pauseTime === undefined) {\n      throw new Error(\"unexpected pauseTime to be undefined when it is paused\");\n    }\n    const pauseLength = Date.now() - this.pauseTime;\n    this.startTime = this.startTime + pauseLength;\n    this.lastFrameTime = this.lastFrameTime + pauseLength;\n    this.pauseTime = undefined;\n    this.isRunning = true;\n    this.scheduleNextFrame();\n  }\n\n  frame = () => {\n    const now = Date.now();\n    const totalDuration = now - this.startTime;\n    const frameLength = now - this.lastFrameTime;\n\n    this.onFrame(this.frameCount, frameLength, totalDuration);\n\n    // it is possible that the frame handler paused or stopped the game\n    if (this.isStarted && this.isRunning) {\n      this.frameCount++;\n      this.lastFrameTime = now;\n      this.scheduleNextFrame();\n    }\n  };\n\n  cancelFrame = () => {\n    if (this.frameId !== undefined) {\n      window.cancelAnimationFrame(this.frameId);\n      this.frameId = undefined;\n    }\n  };\n\n  scheduleNextFrame = () => {\n    this.frameId = window.requestAnimationFrame(this.frame);\n  };\n\n  reset = () => {\n    this.startTime = Date.now();\n    this.lastFrameTime = this.startTime;\n    this.frameCount = 0;\n    this.isStarted = false;\n    this.isRunning = false;\n  };\n}\n","import React, { useEffect } from \"react\";\nimport config from \"../constants/configuration\";\nimport { Actions } from \"../enums/Actions\";\nimport GameState from \"../enums/gameState\";\nimport initialState from \"../reducers/initialState\";\nimport FrameRunner from \"./frameRunner\";\n\nconst replaceRow = (rows, i, row) => {\n  return [...rows.slice(0, i), row, ...rows.slice(i + 1, rows.length)];\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case Actions.SetRowPosition: {\n      const activeRow = state.rows[state.activeRow];\n      if (state.gameStatus !== GameState.Playing) {\n        return state;\n      }\n      state = {\n        ...state,\n        rows: replaceRow(\n          state.rows,\n          state.activeRow,\n          activeRow.setLeft(action.start)\n        ),\n      };\n      return state;\n    }\n    case Actions.AddNewRow: {\n      const newActiveRowIndex = state.activeRow - 1;\n      const currentActiveRow = state.rows[state.activeRow];\n      const isFirstRow = state.activeRow === state.rows.length - 1;\n      let updatedActiveRow;\n      if (isFirstRow) {\n        updatedActiveRow = currentActiveRow;\n      } else {\n        const previousRow = state.rows[state.activeRow + 1];\n        const intersection = previousRow.getIntersection(currentActiveRow);\n        updatedActiveRow = currentActiveRow.setLeftRight(\n          intersection.left,\n          intersection.right\n        );\n      }\n      const updatedRows = replaceRow(\n        state.rows,\n        state.activeRow,\n        updatedActiveRow\n      );\n      if (updatedActiveRow.length < 0) {\n        return {\n          ...state,\n          gameStatus: GameState.Lost,\n        };\n      }\n      if (newActiveRowIndex < 0) {\n        return {\n          ...state,\n          rows: updatedRows,\n          gameStatus: GameState.Won,\n        };\n      }\n      const nextActiveRow = state.rows[newActiveRowIndex];\n      return {\n        ...state,\n        activeRow: newActiveRowIndex,\n        rows: replaceRow(\n          updatedRows,\n          newActiveRowIndex,\n          nextActiveRow\n            .setLength(updatedActiveRow.length)\n            .setLeft(updatedActiveRow.left)\n        ),\n      };\n    }\n    case Actions.Restart: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst useGameModel = () => {\n  const frameRunnerRef = React.useRef(new FrameRunner());\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleFrame = (frameCount, frameLength, totalDuration) => {\n    const activeRow = state.rows[state.activeRow];\n    const ms = totalDuration % config.MillisecondsPerIteration;\n    const uniquePosition = config.Columns - activeRow.length;\n    const totalPositions = uniquePosition * 2;\n    const msPerPosition = config.MillisecondsPerIteration / totalPositions;\n    const currentPosition = Math.floor(ms / msPerPosition);\n    const newStart =\n      currentPosition > uniquePosition\n        ? totalPositions - currentPosition\n        : currentPosition;\n    if (newStart !== activeRow.start) {\n      dispatch({ type: Actions.SetRowPosition, start: newStart });\n    }\n  };\n  useEffect(() => {\n    frameRunnerRef.current.replaceOnFrame(handleFrame);\n  }, [handleFrame]);\n  useEffect(() => {\n    frameRunnerRef.current.start();\n  }, []);\n  useEffect(() => {\n    if (state.gameStatus === GameState.Lost) {\n      frameRunnerRef.current.stop();\n    } else if (state.gameStatus === GameState.Won) {\n      frameRunnerRef.current.stop();\n    }\n  }, [state.gameStatus]);\n\n  const action = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (state.gameStatus === GameState.Lost) {\n        dispatch({ type: Actions.Restart });\n        frameRunnerRef.current.start();\n      } else if (state.gameStatus === GameState.Playing) {\n        dispatch({ type: Actions.AddNewRow });\n      }\n    },\n    [state.gameStatus]\n  );\n\n  return [state, action];\n};\n\nexport default useGameModel;\n","const colors = {\n  pink: \"#FF0EF9\"\n};\n\nexport default colors;\n","import React from \"react\";\nimport Color from \"color\";\n\nconst Dot = ({ color, isOn, size }) => {\n  const backgroundColor = isOn\n    ? Color(color).lighten(0.4)\n    : Color(color).alpha(0.3).desaturate(0.5);\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n        borderRadius: \"50%\",\n        backgroundColor: backgroundColor,\n        boxShadow: isOn\n          ? `0 0 ${size / 2}px ${color}, 0 0 ${size}px ${color}`\n          : undefined,\n      }}\n    />\n  );\n};\n\nexport default Dot;\n","import React from \"react\";\nimport config from \"../constants/configuration\";\nimport Dot from \"./Dot\";\n\nconst Spacer = ({ size }) => <div style={{ width: size, height: size }} />;\n\nconst Board = ({ color, dotSize, rows }) => {\n  const spacing = dotSize / 4;\n  const dotRows = [];\n  for (let i = 0; i < config.Rows; i++) {\n    const dotColumn = [];\n    const row = rows[i];\n    for (let j = 0; j < config.Columns; j++) {\n      dotColumn.push(\n        <React.Fragment key={`cell-${i}:${j}`}>\n          <Dot color={color} size={dotSize} isOn={row.isOn(j)} />\n          <Spacer size={spacing} />\n        </React.Fragment>\n      );\n    }\n    dotRows.push(\n      <React.Fragment key={`row-${i}`}>\n        <div style={{ display: \"flex\" }}>{dotColumn}</div>\n        <Spacer size={spacing} />\n      </React.Fragment>\n    );\n  }\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>{dotRows}</div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport { getTitle } from \"../utils\";\n\nexport const Overview = ({ gameStatus }) => (\n  <h1\n    style={{\n      fontWeight: 900,\n      marginBottom: \"60px\",\n      color: \"white\",\n      fontSize: 50,\n      fontFamily: \"cursive\",\n    }}\n  >\n    {getTitle(gameStatus)}\n  </h1>\n);\n","import GameState from \"../enums/gameState\";\n\nexport const getTitle = (gameStatus) => {\n  switch (gameStatus) {\n    case GameState.Won:\n      return \"You won!!! Hurray\";\n    case GameState.Lost:\n      return \"You lost!!! Please Try again.\";\n    case GameState.Playing:\n    default:\n      return \"Welcome to Stacks!!\";\n  }\n};\n","import React, { useEffect } from \"react\";\nimport useGameModel from \"../hooks/controller\";\nimport colors from \"../styles/colors\";\nimport Board from \"./Board\";\nimport { Overview } from \"./Overview\";\n\nexport const Stacks = () => {\n  const [state, action] = useGameModel();\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", action);\n    window.addEventListener(\"mousedown\", action);\n    return () => {\n      window.removeEventListener(\"keydown\", action);\n      window.removeEventListener(\"mousedown\", action);\n    };\n  }, [action]);\n\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n    >\n      <Overview gameStatus={state.gameStatus} />\n      <Board color={colors.pink} dotSize={20} rows={state.rows} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Stacks } from \"./components/Stacks\";\n\nconst App = () => <Stacks />;\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}